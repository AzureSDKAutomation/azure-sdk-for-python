# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer

from ._configuration import OperationalInsightsManagementClientConfiguration
from .operations import ClustersOperations
from .operations import LinkedServicesOperations
from .operations import DataExportOperations
from .operations import LinkedStorageAccountsOperations
from . import models


class OperationalInsightsManagementClient(SDKClient):
    """Operational Insights Client

    :ivar config: Configuration for client.
    :vartype config: OperationalInsightsManagementClientConfiguration

    :ivar clusters: Clusters operations
    :vartype clusters: azure.mgmt.loganalytics.v2019_08_01_preview.operations.ClustersOperations
    :ivar linked_services: LinkedServices operations
    :vartype linked_services: azure.mgmt.loganalytics.v2019_08_01_preview.operations.LinkedServicesOperations
    :ivar data_export: DataExport operations
    :vartype data_export: azure.mgmt.loganalytics.v2019_08_01_preview.operations.DataExportOperations
    :ivar linked_storage_accounts: LinkedStorageAccounts operations
    :vartype linked_storage_accounts: azure.mgmt.loganalytics.v2019_08_01_preview.operations.LinkedStorageAccountsOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: Gets subscription credentials which uniquely
     identify Microsoft Azure subscription. The subscription ID forms part of
     the URI for every service call.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = OperationalInsightsManagementClientConfiguration(credentials, subscription_id, base_url)
        super(OperationalInsightsManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2019-08-01-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.clusters = ClustersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.linked_services = LinkedServicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.data_export = DataExportOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.linked_storage_accounts = LinkedStorageAccountsOperations(
            self._client, self.config, self._serialize, self._deserialize)
