# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from msrest import Serializer, Deserializer


class OperationalInsightsManagementClientOperationsMixin(object):


    def get_async_operations_status(self, location, async_operation_id, custom_headers=None, raw=False, **operation_config):
        """Get the status of an azure asynchronous operation.

        :param location: The region name of operation.
        :type location: str
        :param async_operation_id: The operation Id.
        :type async_operation_id: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: OperationStatus or ClientRawResponse if raw=true
        :rtype:
         ~azure.mgmt.loganalytics.v2015_11_01_preview.models.OperationStatus or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('get_async_operations_status')
        if api_version == '2015-11-01-preview':
            from .v2015_11_01_preview.operations import OperationalInsightsManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.get_async_operations_status(location, async_operation_id, custom_headers, raw, **operation_config)
