# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model
from msrest.exceptions import HttpOperationError


class CloudError(Model):
    """CloudError.
    """

    _attribute_map = {
    }


class ProxyResource(Model):
    """The Resource model definition.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(ProxyResource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class DefaultSupportPlanResponseResult(ProxyResource):
    """A SupportPlan resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :param plan_type: SupportPlan Type. Possible values include:
     'basic_support', 'developer_support', 'standard_support',
     'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.SupportPlanType
    :param end_date: the end date
    :type end_date: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'plan_type': {'key': 'properties.planType', 'type': 'SupportPlanType'},
        'end_date': {'key': 'properties.endDate', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(DefaultSupportPlanResponseResult, self).__init__(**kwargs)
        self.plan_type = kwargs.get('plan_type', None)
        self.end_date = kwargs.get('end_date', None)


class ErrorResponseBody(Model):
    """Details of error response.

    :param code: Error code, intended to be consumed programmatically.
    :type code: str
    :param message: Description of the error, intended for display in user
     interface.
    :type message: str
    :param target: Target of the particular error, for example name of the
     property.
    :type target: str
    :param details: A list of additional details about the error.
    :type details: list[~azure.mgmt.subscription.models.ErrorResponseBody]
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorResponseBody]'},
    }

    def __init__(self, **kwargs):
        super(ErrorResponseBody, self).__init__(**kwargs)
        self.code = kwargs.get('code', None)
        self.message = kwargs.get('message', None)
        self.target = kwargs.get('target', None)
        self.details = kwargs.get('details', None)


class ErrorResponseBodyException(HttpOperationError):
    """Server responsed with exception of type: 'ErrorResponseBody'.

    :param deserialize: A deserializer
    :param response: Server response to be deserialized.
    """

    def __init__(self, deserialize, response, *args):

        super(ErrorResponseBodyException, self).__init__(deserialize, response, 'ErrorResponseBody', *args)


class SupportPlanName(Model):
    """The supportPlan Name.

    :param plan_type: SupportPlan Type. Possible values include:
     'basic_support', 'developer_support', 'standard_support',
     'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.SupportPlanType
    """

    _attribute_map = {
        'plan_type': {'key': 'planType', 'type': 'SupportPlanType'},
    }

    def __init__(self, **kwargs):
        super(SupportPlanName, self).__init__(**kwargs)
        self.plan_type = kwargs.get('plan_type', None)
