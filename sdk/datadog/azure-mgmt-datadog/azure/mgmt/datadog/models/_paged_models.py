# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.paging import Paged


class DatadogAgreementResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`DatadogAgreementResource <datadog.models.DatadogAgreementResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DatadogAgreementResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(DatadogAgreementResourcePaged, self).__init__(*args, **kwargs)
class DatadogApiKeyPaged(Paged):
    """
    A paging container for iterating over a list of :class:`DatadogApiKey <datadog.models.DatadogApiKey>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DatadogApiKey]'}
    }

    def __init__(self, *args, **kwargs):

        super(DatadogApiKeyPaged, self).__init__(*args, **kwargs)
class DatadogHostPaged(Paged):
    """
    A paging container for iterating over a list of :class:`DatadogHost <datadog.models.DatadogHost>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DatadogHost]'}
    }

    def __init__(self, *args, **kwargs):

        super(DatadogHostPaged, self).__init__(*args, **kwargs)
class LinkedResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`LinkedResource <datadog.models.LinkedResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[LinkedResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(LinkedResourcePaged, self).__init__(*args, **kwargs)
class MonitoredResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`MonitoredResource <datadog.models.MonitoredResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[MonitoredResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(MonitoredResourcePaged, self).__init__(*args, **kwargs)
class OperationResultPaged(Paged):
    """
    A paging container for iterating over a list of :class:`OperationResult <datadog.models.OperationResult>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[OperationResult]'}
    }

    def __init__(self, *args, **kwargs):

        super(OperationResultPaged, self).__init__(*args, **kwargs)
class DatadogMonitorResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`DatadogMonitorResource <datadog.models.DatadogMonitorResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DatadogMonitorResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(DatadogMonitorResourcePaged, self).__init__(*args, **kwargs)
class MonitoringTagRulesPaged(Paged):
    """
    A paging container for iterating over a list of :class:`MonitoringTagRules <datadog.models.MonitoringTagRules>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[MonitoringTagRules]'}
    }

    def __init__(self, *args, **kwargs):

        super(MonitoringTagRulesPaged, self).__init__(*args, **kwargs)
class DatadogSingleSignOnResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`DatadogSingleSignOnResource <datadog.models.DatadogSingleSignOnResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DatadogSingleSignOnResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(DatadogSingleSignOnResourcePaged, self).__init__(*args, **kwargs)
